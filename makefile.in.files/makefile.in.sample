# User variables
USE_PVFMM     ?= no
USE_GPU       ?= yes
VES3D_TESTING ?= no
PLATFORM      ?= $(shell hostname)

# Compiler
CXX     = icpc
CC      = icc
AR      = ar
RANLIB  = ranlib
DOX     = doxygen
TAGS    = etags


# Platform dependent makefile 
include $(VES3D_DIR)/makefile.in.files/makefile.$(CXX)
-include $(VES3D_DIR)/makefile.in.files/makefile.$(PLATFORM)
CXXFLAGS+= $(ALL_INCLUDE)

# PVFMM
ifeq ($(USE_PVFMM),yes)
  -include $(PVFMM_DIR)/MakeVariables
  ifdef CXXFLAGS_PVFMM
    CXXFLAGS+=$(CXXFLAGS_PVFMM) -DHAVE_PVFMM
    LDFLAGS:=$(LDFLAGS_PVFMM) $(LDFLAGS)
    #LDFLAGS+=$(LDFLAGS_PVFMM)
    CXX=$(CXX_PVFMM)
  else
    $(warning WARNING: File not found: $$(PVFMM_DIR)/MakeVariables. Not supporting PVFMM.)
  endif
endif

# GPU	
ifeq ($(USE_GPU),yes)
  VES3D_GPU_LIBS= -lves3dgpu
  CUDA_DIR      = /usr/local/cuda
  NVCC          = $(CUDA_DIR)/bin/nvcc
  CUDA_LIBS     = -L$(CUDA_DIR)/lib64 -lcublas -lcudart	#-Wl,-rpath $(CUDA_DIR)/lib64
  CUDA_INCLUDE  = -I$(CUDA_DIR)/include
  CUDAFLAGS     = $(ALL_INCLUDE) -arch=sm_13

  CXXFLAGS     += -DGPU_ACTIVE
  VES3D_LIBS   += $(VES3D_GPU_LIBS)
  ALL_INCLUDE  += $(CUDA_INCLUDE)
  LDFLAGS      += $(CUDA_LIBS) 	

  %.o: %.cu $(MAKEIN)
	$(NVCC) $(ALL_INCLUDE) $(CUDAFLAGS) -c -o $@ $<
endif

# Adjustments
CPPFLAGS = $(CXXFLAGS)
